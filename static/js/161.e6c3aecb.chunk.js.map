{"version":3,"file":"static/js/161.e6c3aecb.chunk.js","mappings":"yMA8BA,EA3Ba,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OACX,gBAAKC,UAAU,iBAAf,UACE,qBAASA,UAAU,YAAnB,WACE,+BACE,yBAAI,cAAGC,KAAMF,EAAKG,KAAd,SAAqBH,EAAKI,WAC9B,iBAAMH,UAAU,YAAhB,SAA6BD,EAAKK,WAEpC,cAAGH,KAAMF,EAAKG,KAAMF,UAAU,QAA9B,UACE,gBAAKK,IAAG,UAAKC,kBAAL,OAA8BP,EAAKQ,OAASC,IAAKT,EAAKI,WAEhE,gBAAKH,UAAU,cAAf,UACE,uBAAID,EAAKU,aAXJ,EC8Cb,EAhDa,CACX,CACEN,MAAO,iBACPD,KAAM,kDACNK,MAAO,iCACPH,KAAM,WACNK,KACE,8CAEJ,CACEN,MAAO,2BACPD,KAAM,4BACNK,MAAO,iCACPH,KAAM,cACNK,KACE,2NAGJ,CACEN,MAAO,SACPD,KAAM,6EACNK,MAAO,2BACPH,KAAM,cACNK,KACE,gOAGJ,CACEN,MAAO,QACPD,KAAM,6EACNK,MAAO,6BACPH,KAAM,cACNK,KACA,yMAGF,CACEN,MAAO,4BACPD,KAAM,8CACNK,MAAO,gCACPH,KAAM,cACNK,KACE,mPCbN,EAtBiB,kBACf,SAACC,EAAA,EAAD,CACEP,MAAM,WACNQ,YAAY,2CAFd,UAIE,qBAASX,UAAU,OAAOY,GAAG,WAA7B,WACE,6BACE,iBAAKZ,UAAU,QAAf,WACE,eAAI,cAAY,UAAhB,UAA0B,SAAC,KAAD,CAAMa,GAAG,YAAT,yBAC1B,oFAGHd,EAAAA,KAAS,SAACe,GAAD,OACR,SAAC,EAAD,CACEf,KAAMe,GACDA,EAAQX,MAHP,QAZC,C","sources":["components/Projects/Cell.js","data/projects.js","pages/Projects.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Cell = ({ data }) => (\n  <div className=\"cell-container\">\n    <article className=\"mini-post\">\n      <header>\n        <h3><a href={data.link}>{data.title}</a></h3>\n        <time className=\"published\">{data.date}</time>\n      </header>\n      <a href={data.link} className=\"image\">\n        <img src={`${process.env.PUBLIC_URL}${data.image}`} alt={data.title} />\n      </a>\n      <div className=\"description\">\n        <p>{data.desc}</p>\n      </div>\n    </article>\n  </div>\n);\n\nCell.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string,\n    image: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Cell;\n","// TODO Add a couple lines about each project\nconst data = [\n  {\n    title: 'Symbiosis Bias',\n    link: 'https://github.com/daveholtz/SymbiosisBiasFinal',\n    image: '/images/projects/symbiosis.png',\n    date: 'May 2025',\n    desc:\n      'Simulation for paper published in WWW 2025',\n  },\n  {\n    title: 'SmartPrep AI Toefl Tutor',\n    link: 'https://www.smartprep.app',\n    image: '/images/projects/smartprep.png',\n    date: 'Summer 2023',\n    desc:\n      'a cost-effective ChatGPT-powered website, offering personalized one-on-one teaching experiences for TOEFL learners, '\n      + 'with features including speech recognition, conversation, and personalized scoring and suggestions.',\n  },\n  {\n    title: 'Gitlet',\n    link: 'https://inst.eecs.berkeley.edu/~cs61b/sp22/materials/proj/proj3/index.html',\n    image: '/images/projects/git.png',\n    date: 'Spring 2022',\n    desc:\n      'A version-control system that can track and commit file changes, revert to previous versions, create and merge branches.'\n      + ' Implemented the remote features that can pull, push, fetch from a remote repository given the path.',\n  },\n  {\n    title: 'Ataxx',\n    link: 'https://inst.eecs.berkeley.edu/~cs61b/sp22/materials/proj/proj2/index.html',\n    image: '/images/projects/ataxx.png',\n    date: 'Spring 2022',\n    desc:\n    'A board game with both the GUI version and the command line version. Implemented both manual players and AI players.'\n    + ' For AI player, used game trees and alpha beta pruning based on heuristic values.',\n  },\n  {\n    title: 'Chaotic Magnetic Pendulum',\n    link: 'https://github.com/YiweiIvy/ChaoticPendulum',\n    image: '/images/projects/pendulum.png',\n    date: 'Spring 2021',\n    desc:\n      'This is a solution to the 2022 International Physicists Tournament Problem 13.'\n      + ' The Project won a 7.5/10 score on the United States Physicists Tournament'\n      + ' and together with another two problems our team won the 1st place in the competition.',\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Cell from '../components/Projects/Cell';\nimport data from '../data/projects';\n\nconst Projects = () => (\n  <Main\n    title=\"Projects\"\n    description=\"Learn about Michael D'Angelo's projects.\"\n  >\n    <article className=\"post\" id=\"projects\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"/projects\">Projects</Link></h2>\n          <p>A selection of projects that I&apos;m not too ashamed of</p>\n        </div>\n      </header>\n      {data.map((project) => (\n        <Cell\n          data={project}\n          key={project.title}\n        />\n      ))}\n    </article>\n  </Main>\n);\n\nexport default Projects;\n"],"names":["data","className","href","link","title","date","src","process","image","alt","desc","Main","description","id","to","project"],"sourceRoot":""}